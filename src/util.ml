open Parser

let token_to_string t =
  match t with
  | XOR -> "XOR"
  | UNIT -> "UNIT"
  | SUB -> "SUB"
  | STRING_LIT s -> "STRING_LIT(" ^ s ^ ")"
  | SPACE -> "SPACE"
  | SHIFTR -> "SHIFTR"
  | SHIFTL -> "SHIFTL"
  | SEMICOLON -> "SEMICOLON"
  | RSQR -> "RSQR"
  | RPAR -> "RPAR"
  | RETURN -> "RETURN"
  | RCUR -> "RCUR"
  | QUOT -> "QUOT"
  | OR -> "OR"
  | NOT -> "NOT"
  | NEQ -> "NEQ"
  | NEG -> "NEG"
  | MUL -> "MUL"
  | MOD -> "MOD"
  | LT -> "LT"
  | LSQR -> "LSQR"
  | LPAR -> "LPAR"
  | LET -> "LET"
  | LE -> "LE"
  | LCUR -> "LCUR"
  | INTEGER_LIT i -> "INTEGER_LIT(" ^ string_of_int i ^ ")"
  | IF -> "IF"
  | IDENTIFIER id -> "IDENTIFIER(" ^ id ^ ")"
  | GT -> "GT"
  | GE -> "GE"
  | FN -> "FN"
  | FLOAT_LIT f -> "FLOAT_LIT(" ^ string_of_float f ^ ")"
  | EQ -> "EQ"
  | EOF -> "EOF"
  | ELSE -> "ELSE"
  | ELIF -> "ELIF"
  | DOUBLEQUOT -> "DOUBLEQUOT"
  | DIV -> "DIV"
  | COMMENT -> "COMMENT"
  | COMMA -> "COMMA"
  | COLON -> "COLON"
  | CHAR_LIT c -> "CHAR_LIT(" ^ String.make 1 c ^ ")"
  | B_OR -> "B_OR"
  | B_AND -> "B_AND"
  | BOOL_LIT b -> "BOOL_LIT(" ^ string_of_bool b ^ ")"
  | ASSIGN -> "ASSIGN"
  | AND -> "AND"
  | AFTER_ELSE -> "AFTER_ELSE"
  | ADD -> "ADD"
